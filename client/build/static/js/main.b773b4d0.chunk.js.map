{"version":3,"sources":["components/Navbar/Navbar.js","views/Home.js","utils/API.js","components/Upload/Upload.js","components/Gallery/Gallery.js","components/Detail/Detail.js","App.js","registerServiceWorker.js","index.js","assets/images/tester.svg"],"names":["Navbar","className","exact","activeClassName","to","Home","src","tester","alt","axios","get","_id","uploadData","post","Upload","props","handleImageUpload","files","document","querySelector","formData","FormData","append","process","REACT_APP_UPLOAD_PRESET","fetch","method","body","then","res","json","console","log","setState","imageurl","url","latitude","image_metadata","GPSLatitude","longitude","GPSLongitude","created","CreateDate","API","state","images","imageAlt","bind","type","accept","placeholder","onClick","this","React","Component","Gallery","useState","uploads","setUploads","loadUploads","data","catch","err","useEffect","cloudName","length","key","id","map","role","aria-label","onSubmit","event","Detail","useParams","date","App","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","getElementById","URL","origin","addEventListener","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.b773b4d0.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './style.css';\n\nfunction Navbar() {\n    return (\n        <div className='navbar'>\n            <div className='nav-links'>\n                <NavLink exact activeClassName='active' to='/'>\n                    home\n                </NavLink>\n\n                <NavLink exact activeClassName='active' to='/gallery'>\n                    gallery\n                </NavLink>\n\n                <NavLink exact activeClassName='active' to='/home'>\n                    map\n                </NavLink>\n\n                <NavLink exact activeClassName='active' to='/home'>\n                    login\n                </NavLink>\n            </div>\n        </div>\n    )\n};\n\nexport default Navbar;","import React from 'react';\nimport tester from '../assets/images/tester.svg';\nimport './style.css';\n\nconst Home = () => {\n    \n    return (\n        <div className='content-container'>\n            <div className='welcome'>\n                <img src={tester} alt='mushroom'></img>\n                <p>i'm a pretty fungi</p>\n            </div>\n        </div>\n    )\n};\n\nexport default Home;","import axios from \"axios\";\n\n// eslint-disable-next-line\nexport default {  \n  getUploads: function() {\n    return axios.get(\"/api/uploads\");\n  },\n  \n  getUpload: function(_id) {\n    return axios.get(\"/api/uploads/\" + _id);\n  },\n  \n  deleteUpload: function(_id) {\n    return axios.delete(\"/api/uploads/\" + _id);\n  },\n  \n  saveUpload: function(uploadData) {\n    return axios.post(\"/api/uploads\", uploadData);\n  }\n};\n\n","import React from 'react';\nimport API from '../../utils/API';\nimport './style.css';\n\nclass Upload extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            images: [],\n            imageurl: null,\n            imageAlt: null,\n        }\n        this.handleImageUpload = this.handleImageUpload.bind(this)\n    }\n\n    handleImageUpload = () => {\n        const { files } = document.querySelector('input[type=\"file\"]')\n        const formData = new FormData();\n        formData.append('file', files[0]);\n        formData.append('upload_preset', process.env.REACT_APP_UPLOAD_PRESET);\n        const options = {\n            method: 'POST',\n            body: formData,\n        };\n\n        return fetch('https://api.Cloudinary.com/v1_1/fung-id/image/upload', options)\n            .then(res => res.json())\n            .then(res => {\n                console.log(res);\n                this.setState({\n                    imageurl: res.url,\n                    latitude: res.image_metadata.GPSLatitude,\n                    longitude: res.image_metadata.GPSLongitude,\n                    created: res.image_metadata.CreateDate\n                })\n            })\n\n            .then(res => {\n                API.saveUpload({\n                    imageurl: this.state.imageurl,\n                    latitude: this.state.latitude,\n                    longitude: this.state.longitude,\n                    created: this.state.created\n                })\n            })\n\n    }\n\n    render() {\n        return (\n            \n            <section className='image-upload'>\n                <div className='image-upload-form'>\n                    <input type='file' accept='image/*' />\n                </div>\n                <div className='text-input'>\n                    <input type='text' placeholder='name this fungus' />\n                    <input type='text' placeholder='notes' />\n                </div>\n                <button\n                    type='button'\n                    className='image-upload-button'\n                    onClick={this.handleImageUpload}>\n                    submit\n                </button>\n            </section>\n        );\n    }\n}\n\nexport default Upload;","import React, { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { Image, CloudinaryContext } from 'cloudinary-react';\nimport Upload from '../Upload/Upload';\nimport API from '../../utils/API';\nimport './style.css';\n\nfunction Gallery() {\n    const [uploads, setUploads] = useState([])\n    useEffect(() => {\n        loadUploads()\n    }, [])\n\n    function loadUploads() {\n        API.getUploads()\n            .then(res =>\n                setUploads(res.data),\n            )\n            .catch(err => console.log(err));\n    };\n\n    function handleFormSubmit(event) {\n        console.log('form submit registered correctly')\n        API.saveUpload({\n            imageurl: this.state.imageurl,\n            latitude: this.state.latitude,\n            longitude: this.state.longitude,\n            created: this.state.created\n        })\n            .then(loadUploads())\n    }\n\n\n\n    return (\n        <div className='content-container'>\n            <div className='gallery'>\n                <CloudinaryContext cloudName=\"fung_id\">\n                    {uploads.length ? (\n                        <div key={uploads.id}\n                            className='uploads-each'>\n                            {uploads.map(uploads => (\n                                <div key={uploads._id}\n                                    className='image-one'>\n                                    <Link\n                                        to={`/detail/${uploads._id}`}\n                                        imageurl={uploads.imageurl}>\n                                        <Image\n                                            key={uploads._id}\n                                            src={uploads.imageurl} />\n                                    </Link>\n                                </div>\n                            ))}\n                        </div>\n\n                    ) : (\n                        <p>\n                            <span\n                                role='img'\n                                aria-label='mushroom emoji'>\n                                🍄\n                            </span>\n                        </p>\n                    )}\n                    <div className='image-upload-button'>\n                        <form>\n                            <Upload onSubmit={handleFormSubmit} />\n                        </form>\n                    </div>\n                </CloudinaryContext>\n            </div>\n        </div>\n    )\n};\n\nexport default Gallery;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Image, CloudinaryContext } from 'cloudinary-react';\nimport API from '../../utils/API';\nimport './style.css';\n\nfunction Detail(props) {\n    const [uploads, setUploads] = useState({})\n    const { id } = useParams()\n\n    useEffect(() => {\n        API.getUpload(id)\n            .then(res => setUploads(res.data))\n            .catch(err => console.log(err))\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    return (\n        <CloudinaryContext>\n            <div className='content-container'>\n                <div className='detail-thumbnail'>\n                    <div className='detail-image'>\n                        <Image src={uploads.imageurl} />\n                    </div>\n                </div>\n                <div className='text-deetz'>\n                    <p>{uploads.latitude}</p>\n                    <p>{uploads.longitude}</p>\n                    <p>{uploads.date}</p>\n                </div>\n            </div>\n        </CloudinaryContext>\n    )\n}\n\nexport default Detail;","import React from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { CloudinaryContext } from 'cloudinary-react';\nimport Navbar from './components/Navbar/Navbar';\nimport Home from './views/Home';\nimport Gallery from './components/Gallery/Gallery';\nimport Detail from './components/Detail/Detail';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CloudinaryContext>\n        <Router>\n          <Navbar />\n          <Route exact path='/'><Home /></Route>\n          <Route exact path='/home'><Home /></Route>\n          <Route exact path='/gallery'><Gallery /></Route>\n          <Route exact path='/detail/:id'><Detail /></Route>\n        </Router>\n      </CloudinaryContext>\n    </div>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/tester.78729167.svg\";"],"sourceRoot":""}