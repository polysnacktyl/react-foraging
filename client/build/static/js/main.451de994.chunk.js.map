{"version":3,"sources":["assets/images/tester.svg","auth0/protected-route.js","components/Buttons/LoginButton.js","components/Buttons/LogoutButton.js","components/Navbar/Navbar.js","components/Alert.js","components/Upload/Upload.js","views/Home.js","utils/API.js","components/Gallery/Gallery.js","components/Map/Map.js","components/Detail/Detail.js","utils/userContext.js","App.js","auth0/auth0-provider-with-history.js","registerServiceWorker.js","index.js"],"names":["module","exports","ProtectedRoute","component","args","withAuthenticationRequired","LoginButton","loginWithRedirect","useAuth0","onClick","LogoutButton","logout","returnTo","window","location","origin","Navbar","className","exact","activeClassName","to","Alert","msg","type","useState","show","setShow","useEffect","setInterval","Upload","fileInputState","setFileInputState","previewSource","setPreviewSource","selectedFile","setSelectedFile","successMsg","setSuccessMsg","errMsg","setErrMsg","previewFile","file","reader","FileReader","readAsDataURL","onloadend","result","uploadImage","base64EncodedImage","a","fetch","method","body","JSON","stringify","data","headers","console","error","onSubmit","e","preventDefault","onerror","id","name","onChange","target","files","value","src","alt","style","height","Home","axios","get","_id","Gallery","uploads","setUploads","API","then","res","catch","err","log","cloudName","length","key","reverse","map","thumbnail","latitude","longitude","role","aria-label","Mapp","props","isLoading","setLoading","coords","setCoords","useParams","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","Marker","position","Popup","Detail","upload","imageurl","UserContext","React","createContext","user","App","Provider","path","Auth0ProviderWithHistory","children","history","useHistory","domain","process","REACT_APP_AUTH0_DOMAIN","clientId","REACT_APP_AUTH0_CLIENT_ID","audience","REACT_APP_AUTH0_AUDIENCE","redirectUri","onRedirectCallback","appState","push","pathname","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","ReactDOM","render","document","getElementById","URL","addEventListener","response","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.451de994.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tester.baa7e5b3.svg\";","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { withAuthenticationRequired } from '@auth0/auth0-react';\n\n\nconst ProtectedRoute = ({ component, ...args }) => (\n    <Route\n        {...args}\n        component={withAuthenticationRequired(component)}\n\n    />\n);\n\nexport default ProtectedRoute;","import React from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\n\n\nconst LoginButton = () => {\n    const { loginWithRedirect } = useAuth0();\n\n    return (\n        <button\n            onClick={() => loginWithRedirect()}>\n            log in\n        </button>\n    )\n}\n\nexport default LoginButton;","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst LogoutButton = () => {\n  const { logout } = useAuth0();\n  return (\n    <button\n      onClick={() =>\n        logout({ returnTo: window.location.origin })\n      }>\n      log out\n    </button>\n  );\n};\n\nexport default LogoutButton;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport LoginButton from '../Buttons/LoginButton';\nimport LogoutButton from '../Buttons/LogoutButton';\nimport './style.css';\n\nfunction Navbar() {\n\n    return (\n        <div className='navbar'>\n            <div className='nav-links'>\n                <NavLink exact activeClassName='active' to='/'>\n                    home\n                </NavLink>\n                <NavLink exact activeClassName='active' to='/gallery'>\n                    gallery\n                </NavLink>\n\n                <LoginButton />\n                \n                <LogoutButton />\n\n            </div>\n        </div>\n    )\n};\n\nexport default Navbar;","import React, { useState, useEffect } from 'react';\n\nexport default function Alert({ msg, type }) {\n    const [show, setShow] = useState(false);\n    useEffect(() => {\n        if (msg) {\n            setShow(true);\n            setInterval(() => {\n                setShow(false);\n            }, 2000);\n        }\n    }, [msg]);\n    return <>{show && <div className={`alert alert-${type}`}>{msg}</div>}</>;\n}\n","import React, { useState } from 'react';\nimport Alert from '../Alert';\n\nexport default function Upload() {\n    const [fileInputState, setFileInputState] = useState('');\n    const [previewSource, setPreviewSource] = useState('');\n    const [selectedFile, setSelectedFile] = useState();\n    const [successMsg, setSuccessMsg] = useState('');\n    const [errMsg, setErrMsg] = useState('');\n    \n    const handleFileInputChange = (e) => {\n        const file = e.target.files[0];\n        previewFile(file);\n        setSelectedFile(file);\n        setFileInputState(e.target.value);\n    };\n\n    const previewFile = (file) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onloadend = () => {\n            setPreviewSource(reader.result);\n        };\n    };\n\n    const handleSubmitFile = (e) => {\n        e.preventDefault();\n        if (!selectedFile) return;\n        const reader = new FileReader();\n        reader.readAsDataURL(selectedFile);\n        reader.onloadend = () => {\n            uploadImage(reader.result);\n        };\n        reader.onerror = () => {\n            console.error('AHHHHHHHH!!');\n            setErrMsg('something went wrong!');\n        };\n    };\n\n    const uploadImage = async (base64EncodedImage) => {\n        try {\n            await fetch('/api/upload', {\n                method: 'POST',\n                body: JSON.stringify({ data: base64EncodedImage }),\n                headers: { 'Content-Type': 'application/json' },\n            });\n            setFileInputState('');\n            setPreviewSource('');\n            setSuccessMsg('Image uploaded successfully');\n        } catch (err) {\n            console.error(err);\n            setErrMsg('Something went wrong!');\n        }\n    };\n    return (\n        <div>\n            <h1 className=\"title\">Upload an Image</h1>\n            <Alert msg={errMsg} type=\"danger\" />\n            <Alert msg={successMsg} type=\"success\" />\n            <form onSubmit={handleSubmitFile} className=\"form\">\n                <input\n                    id=\"fileInput\"\n                    type=\"file\"\n                    name=\"image\"\n                    onChange={handleFileInputChange}\n                    value={fileInputState}\n                    className=\"form-input\"\n                />\n                <button className=\"btn\" type=\"submit\">\n                    Submit\n                </button>\n            </form>\n            {previewSource && (\n                <img\n                    src={previewSource}\n                    alt=\"chosen\"\n                    style={{ height: '300px' }}\n                />\n            )}\n        </div>\n    );\n}\n","import React from 'react';\nimport tester from '../assets/images/tester.svg';\nimport Upload from '../components/Upload/Upload';\nimport './style.css';\n\nconst Home = () => {\n    \n    return (\n        <div className='content-container'>\n            <div className='welcome'>\n                {/* <img src={tester} alt='mushroom'></img>\n                <p>i'm a pretty fungi</p> */}\n                <Upload /> \n            </div>\n        </div>\n    )\n};\n\nexport default Home;","import axios from \"axios\";\n// eslint-disable-next-line\nexport default {  \n  getUploads: function() {\n    return axios.get(\"/api/uploads\");\n  },\n  \n  getUpload: function(_id) {\n    return axios.get(\"/api/uploads/\" + _id);\n  },\n  \n  deleteUpload: function(_id) {\n    return axios.delete(\"/api/uploads/\" + _id);\n  },\n  \n  saveUpload: function(uploadData) {\n    return axios.post(\"/api/uploads\", uploadData);\n  }\n};\n\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { Image, CloudinaryContext } from 'cloudinary-react';\nimport Upload from '../Upload/Upload';\nimport API from '../../utils/API';\nimport './style.css';\n\nfunction Gallery() {\n    const [uploads, setUploads] = useState([])\n\n    useEffect(() => {\n        loadUploads()\n    }, [])\n\n    function loadUploads() {\n        API.getUploads()\n            .then(res =>\n                setUploads(res.data),\n            )\n            .catch(err => console.log(err));\n    };\n\n    return (\n        <CloudinaryContext cloudName=\"fung-id\">\n            <div className='content-container'>\n                <div className='gallery'>\n                    <div className='images'>\n                        {uploads.length ? (\n                            <div key={uploads.id}\n                                className='thumbnails-inner'>\n                                {uploads.reverse().map(uploads => (\n                                    <div key={uploads._id}\n                                        className='image-one'>\n                                        <Link\n                                            to={`/detail/${uploads._id}`}>\n                                            <Image\n                                                key={uploads._id}\n                                                src={uploads.thumbnail}\n                                                latitude={uploads.latitude}\n                                                longitude={uploads.longitude}\n                                            />\n                                        </Link>\n                                    </div>\n                                ))}\n                            </div>\n                        ) : (\n                            <div className='empty-gallery'>\n                                <p>\n                                    <span\n                                        role='img'\n                                        aria-label='mushroom emoji'>\n                                        🍄\n                                    </span>\n                                    <span> insert some fungus among us--please and thank you </span>\n                                    <span\n                                        role='img'\n                                        aria-label='mushroom emoji'>\n                                        🍄\n                                    </span>\n                                </p>\n                            </div>\n                        )}\n                    </div>\n                    <div className='image-upload-area'>\n                        <Upload />\n                    </div>\n                </div>\n            </div>\n        </CloudinaryContext >\n    )\n};\n\nexport default Gallery;\n\n\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\nimport API from '../../utils/API';\nimport './Map.css';\n\nfunction Mapp(props) {\n    const [isLoading, setLoading] = useState(true);\n    const [coords, setCoords] = useState();\n    const { id } = useParams();\n\n    useEffect(() => {\n        API.getUpload(id)\n            .then(res => {\n                setCoords(res.data)\n                setLoading(false);\n            });\n        // eslint-disable-next-line \n    }, []);\n\n    if (isLoading) {\n        return (\n            <div>...loading</div>\n        )\n    }\n\n    return (\n        <div className='mapid' >\n            <MapContainer\n                center={[coords.latitude, coords.longitude]}\n                zoom={16}\n                scrollWheelZoom={true}>\n                <TileLayer\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                />\n                <Marker position={[coords.latitude, coords.longitude]}>\n                    <Popup>\n                        popup text\n                    </Popup>\n                </Marker>\n            </MapContainer>\n\n        </div>\n    )\n}\n\n\nexport default Mapp;\n\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Image, CloudinaryContext } from 'cloudinary-react';\nimport API from '../../utils/API';\nimport Map from '../Map/Map';\nimport './style.css';\n\nfunction Detail(props) {\n    const [upload, setUploads] = useState([props])\n    const { id } = useParams()\n\n    useEffect(() => {\n        loadUpload()\n        // eslint-disable-next-line\n    }, [])\n\n    function loadUpload() {\n        API.getUpload(id)\n            .then(res =>\n                setUploads(res.data))\n            .catch(err => console.log(err))\n    };\n\n\n    return (\n        <CloudinaryContext >\n            <div className='content-container'>\n                <div className='detail-container'>\n                    <div className='detail-thumbnail'>\n                        <div className='detail-image'>\n                            <Image src={upload.imageurl} />\n                        </div>\n                        <div className='details'>\n                            <div className='map'>\n                                <div className='mapid'>\n                                    <Map />\n                                </div>\n                            </div>\n                            <p>notes and such will go here soon</p>\n                        </div>\n                    </div>\n\n                </div>\n\n            </div>\n        </CloudinaryContext >\n    )\n}\n\nexport default Detail;\n\n","import React from \"react\";\n\nconst UserContext = React.createContext({\n    user: \"\",\n\n});\n\nexport default UserContext;","import React from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { CloudinaryContext } from 'cloudinary-react';\nimport ProtectedRoute from './auth0/protected-route';\nimport Navbar from './components/Navbar/Navbar';\nimport Home from './views/Home';\nimport Gallery from './components/Gallery/Gallery';\nimport Detail from './components/Detail/Detail';\nimport UserContext from './utils/userContext';\n// import ModalMega from './components/Modal/ModalMega';\n// import Upload from './components/Upload/Upload';\n\nconst App = () => {\n  const { user } = useAuth0();\n  return (\n    <UserContext.Provider value={{ user }}>\n      <CloudinaryContext>\n        <div className=\"App\">\n          <Router>\n            <Navbar />\n            {/* <ProtectedRoute exact path='/' component={Home} /> */}\n            {/* <ProtectedRoute exact path='/home' component={Home} /> */}\n            <Route exact path='/'><Home /></Route>\n            <ProtectedRoute exact path='/gallery' component={Gallery} />\n            <ProtectedRoute exact path='/detail/:id' component={Detail} />\n          </Router>\n        </div>\n      </CloudinaryContext>\n    </UserContext.Provider>\n  );\n\n}\n\nexport default App;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\n\nconst Auth0ProviderWithHistory = ({ children }) => {\n  const history = useHistory();\n  const domain = process.env.REACT_APP_AUTH0_DOMAIN;\n  const clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\n  const audience = process.env.REACT_APP_AUTH0_AUDIENCE;\n  console.log(process.env);\n  const onRedirectCallback = (appState) => {\n    history.push(appState?.returnTo || window.location.pathname);\n  };\n\n  return (\n    <Auth0Provider\n      domain={domain}\n      clientId={clientId}\n      redirectUri={window.location.origin}\n      onRedirectCallback={onRedirectCallback}\n      audience={audience}\n    >\n      {children}\n    </Auth0Provider>\n  );\n};\n\nexport default Auth0ProviderWithHistory;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport Auth0ProviderWithHistory from './auth0/auth0-provider-with-history';\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport \"./index.css\";\n\nReactDOM.render(\n\n    <Router>\n        <Auth0ProviderWithHistory>\n            <App />\n        </Auth0ProviderWithHistory>\n    </Router>,\n    document.getElementById(\"root\"));\n\n\nregisterServiceWorker();\n"],"sourceRoot":""}